{"metadata":{"symbolKind":"method","modules":[{"relatedModules":["Combine"],"name":"GCCardReader"}],"roleHeading":"Instance Method","role":"symbol","title":"prediction(model:)","externalID":"s:7Combine9PublisherP12GCCardReaderSo17MLFeatureProvider6OutputRpzrlE10prediction5modelAA10PublishersO3MapVy_xs6ResultOySoAE_ps5Error_pGGSo7MLModelC_tF","platforms":[{"introducedAt":"13.0","name":"iOS","beta":false,"unavailable":false,"deprecated":false},{"deprecated":false,"introducedAt":"10.15","name":"macOS","unavailable":false,"beta":false},{"beta":false,"name":"tvOS","introducedAt":"13.0","deprecated":false,"unavailable":false}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MLFeatureProvider"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prediction"},{"text":"(","kind":"text"},{"text":"model","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MLModel","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLModel"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine10PublishersO3MapV","kind":"typeIdentifier","text":"Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MLFeatureProvider","text":"MLFeatureProvider"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">>","kind":"text"}],"extendedModule":"Combine"},"abstract":[{"type":"text","text":"Operator that lets you run a Core ML model as part of a Combine chain."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prediction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"model","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MLModel","preciseIdentifier":"c:objc(cs)MLModel","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Publishers","preciseIdentifier":"s:7Combine10PublishersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO3MapV","text":"Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"MLFeatureProvider","preciseIdentifier":"c:objc(pl)MLFeatureProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">>","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"It accepts an MLFeatureProvider object as input, and, if all goes well,"},{"type":"text","text":" "},{"type":"text","text":"returns another MLFeatureProvider with the model outputs."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Since Core ML can give errors, we put everything in a Result object.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"compactMap"},{"type":"text","text":" version to always ignore errors, or "},{"code":"tryMap","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"complete the subscription upon the first error."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To perform the Core ML request on a background thread, itâ€™s probably a good"},{"type":"text","text":" "},{"type":"text","text":"idea to write a custom Publisher class, but for simple use cases "},{"code":"map","type":"codeVoice"},{"type":"text","text":" works"},{"text":" ","type":"text"},{"type":"text","text":"well enough."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/gccardreader\/combine\/publisher\/prediction(model:)-b75i"]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine\/Publisher\/prediction(model:)-b75i","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader","doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine","doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine\/Publisher"]]},"references":{"doc://com.gamechange.GCCardReader/documentation/GCCardReader/Combine/Publisher/prediction(model:)-b75i":{"title":"prediction(model:)","url":"\/documentation\/gccardreader\/combine\/publisher\/prediction(model:)-b75i","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prediction","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"model"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLModel","text":"MLModel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO3MapV","text":"Map"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MLFeatureProvider","preciseIdentifier":"c:objc(pl)MLFeatureProvider"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">>"}],"type":"topic","identifier":"doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine\/Publisher\/prediction(model:)-b75i","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" conforms to "},{"code":"MLFeatureProvider","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Operator that lets you run a Core ML model as part of a Combine chain.","type":"text"}]},"doc://com.gamechange.GCCardReader/documentation/GCCardReader":{"type":"topic","abstract":[{"type":"text","text":"GCCardReader is a framework used for the scanning of emirates ID cards using either the NFC capability or perform OCR with the camera and then validate the result using the ICA API."}],"title":"GCCardReader","role":"collection","kind":"symbol","identifier":"doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader","url":"\/documentation\/gccardreader"},"doc://com.gamechange.GCCardReader/documentation/GCCardReader/Combine/Publisher":{"url":"\/documentation\/gccardreader\/combine\/publisher","kind":"symbol","identifier":"doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine\/Publisher","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier","preciseIdentifier":"s:7Combine9PublisherP"}],"type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"role":"symbol","title":"Publisher"},"doc://com.gamechange.GCCardReader/documentation/GCCardReader/Combine":{"url":"\/documentation\/gccardreader\/combine","kind":"symbol","identifier":"doc:\/\/com.gamechange.GCCardReader\/documentation\/GCCardReader\/Combine","type":"topic","abstract":[],"role":"collection","title":"Combine"}}}